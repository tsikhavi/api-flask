"""Add invoice_balance and profileImage to User model

Revision ID: 7c0dfc08ab3a
Revises: 
Create Date: 2024-07-20 16:36:51.987876

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7c0dfc08ab3a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('subscribed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('userglobal')
    op.drop_table('files')
    op.drop_table('blacklist_tokens')
    op.drop_table('contact')
    op.drop_table('blog')
    op.drop_table('analytics')
    op.drop_table('feedback_blog')
    op.drop_table('invoices')
    op.drop_table('subscriptions')
    op.drop_table('feedback')
    op.drop_table('usercred')
    op.drop_table('userinfo1')
    op.drop_table('messages')
    op.drop_table('userinfo')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column('token', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('verified', sa.String(length=1), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=60),
               nullable=True)
        batch_op.drop_constraint('user_username_key', type_='unique')
        batch_op.drop_constraint('user_uuid_key', type_='unique')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_column('username')
        batch_op.drop_column('uuid')
        batch_op.drop_column('role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('username', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('user_uuid_key', ['uuid'])
        batch_op.create_unique_constraint('user_username_key', ['username'])
        batch_op.alter_column('password',
               existing_type=sa.String(length=60),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('verified')
        batch_op.drop_column('token')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('email')
        batch_op.drop_column('name')

    op.create_table('userinfo',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('verified', sa.VARCHAR(length=100), server_default=sa.text("'0'::character varying"), autoincrement=False, nullable=False),
    sa.CheckConstraint("verified::text = ANY (ARRAY['0'::character varying, '1'::character varying]::text[])", name='userinfo_verified_check'),
    sa.PrimaryKeyConstraint('id', name='userinfo_pkey'),
    sa.UniqueConstraint('email', name='userinfo_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='messages_pkey'),
    sa.UniqueConstraint('uuid', name='messages_uuid_key')
    )
    op.create_table('userinfo1',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('verified', sa.VARCHAR(length=1), server_default=sa.text("'0'::character varying"), autoincrement=False, nullable=False),
    sa.Column('profile_image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint("verified::text = ANY (ARRAY['0'::character varying, '1'::character varying]::text[])", name='userinfo1_verified_check'),
    sa.PrimaryKeyConstraint('id', name='userinfo1_pkey'),
    sa.UniqueConstraint('email', name='userinfo1_email_key')
    )
    op.create_table('usercred',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usercred_pkey')
    )
    op.create_table('feedback',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='feedback_pkey')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('subscribed_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey'),
    sa.UniqueConstraint('email', name='subscriptions_email_key')
    )
    op.create_table('invoices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='invoices_pkey')
    )
    op.create_table('feedback_blog',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('blog_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('like', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('dislike', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('error', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], name='feedback_blog_blog_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['userinfo.id'], name='feedback_blog_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feedback_blog_pkey')
    )
    op.create_table('analytics',
    sa.Column('page_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_time_on_page', postgresql.INTERVAL(), autoincrement=False, nullable=True),
    sa.Column('avg_session_duration', postgresql.INTERVAL(), autoincrement=False, nullable=True),
    sa.Column('pages_per_session', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('bounce_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('traffic_sources', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('social_referrals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('new_visitor_sessions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('returning_visitor_sessions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('conversion_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('exit_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('top_pages', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('top_exit_pages', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('revenue_attribution', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('event_tracking', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    op.create_table('blog',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('intro', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_section', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('list', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('conclusion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('views', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('likes', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('errors', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('dislikes', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('comments', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='blog_pkey')
    )
    op.create_table('contact',
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('contact_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='blacklist_tokens_pkey'),
    sa.UniqueConstraint('token', name='blacklist_tokens_token_key')
    )
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('filepath', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.create_table('userglobal',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('verified', sa.VARCHAR(length=100), server_default=sa.text("'0'::character varying"), autoincrement=False, nullable=False),
    sa.CheckConstraint("verified::text = ANY (ARRAY['0'::character varying, '1'::character varying]::text[])", name='userglobal_verified_check'),
    sa.PrimaryKeyConstraint('id', name='userglobal_pkey')
    )
    op.drop_table('subscription')
    # ### end Alembic commands ###
